#!/usr/bin/perl

use Mojolicious::Lite;
use JRobin;

# small server that will fetch a JRD file and return a time period as JSON
# values.  Also provided (for your pleasure), a D3 chart thing to view the
# JSON values (maybe).

# obviously this needs to be secured if you use it in production...


get '/data' => sub {
    my $self = shift;

    my $file = $self->param('file');

    my $robin = new JRobin('t/data/ifInOctets.jrb');
    #my $robin = new JRobin('/var/lib/opennms/rrds/snmp/' . $file);
    return $self->render(json => $robin->dump_archive({ archive => 0 }));

};

get '/' => sub {
    my $self = shift;
    my $file = $self->param('file');
    $self->stash(file => $file);
    return $self->render('d3chart');
};


app->start;


__DATA__
@@ d3chart.html.ep
<DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
%= javascript 'https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js'
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(+d['value']); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.json('<%= url_for('/data')->query('file' => $file); %>', function(error, data) {
  data.forEach(function(d) {
    d.date = new Date(d['time']*1000);
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain(d3.extent(data, function(d) { return +d['value']; }));

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end");

  svg.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", line);
});

</script>




